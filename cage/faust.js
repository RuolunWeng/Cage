/*
Code generated with Faust version 2.19.7
Compilation options: -lang wasm-eb -scal -ftz 2
*/

function getJSONcage() {
	return '{"name": "cage","filename": "cage.dsp","version": "2.19.7","compile_options": "-lang wasm-eb -scal -ftz 2","library_list": ["/usr/local/share/faust/stdfaust.lib","/usr/local/share/faust/basics.lib","/usr/local/share/faust/maths.lib","/usr/local/share/faust/delays.lib","/usr/local/share/faust/soundfiles.lib","/usr/local/share/faust/runtime.lib","/usr/local/share/faust/float.lib","/usr/local/share/faust/signals.lib","/usr/local/share/faust/noises.lib","/usr/local/share/faust/filters.lib","/usr/local/share/faust/routes.lib","/usr/local/share/faust/envelopes.lib","/usr/local/share/faust/oscillators.lib","/usr/local/share/faust/reverbs.lib"],"include_pathnames": ["/usr/local/share/faust","/usr/local/share/faust","/usr/share/faust",".","/Users/allenweng/Documents/FAUST/Cage/cage"],"size": 16181888,"inputs": 0,"outputs": 2,"meta": [ { "basics.lib/name": "Faust Basic Element Library" },{ "basics.lib/version": "0.1" },{ "delays.lib/name": "Faust Delay Library" },{ "delays.lib/version": "0.1" },{ "envelopes.lib/asr:author": "Yann Orlarey, St√©phane Letz" },{ "envelopes.lib/author": "GRAME" },{ "envelopes.lib/copyright": "GRAME" },{ "envelopes.lib/license": "LGPL with exception" },{ "envelopes.lib/name": "Faust Envelope Library" },{ "envelopes.lib/version": "0.0" },{ "filename": "cage.dsp" },{ "filters.lib/allpass_comb:author": "Julius O. Smith III" },{ "filters.lib/allpass_comb:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/allpass_comb:license": "MIT-style STK-4.3 license" },{ "filters.lib/fir:author": "Julius O. Smith III" },{ "filters.lib/fir:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/fir:license": "MIT-style STK-4.3 license" },{ "filters.lib/iir:author": "Julius O. Smith III" },{ "filters.lib/iir:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/iir:license": "MIT-style STK-4.3 license" },{ "filters.lib/lowpass0_highpass1": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/lowpass0_highpass1:author": "Julius O. Smith III" },{ "filters.lib/lowpass:author": "Julius O. Smith III" },{ "filters.lib/lowpass:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/lowpass:license": "MIT-style STK-4.3 license" },{ "filters.lib/name": "Faust Filters Library" },{ "filters.lib/peak_eq_rm:author": "Julius O. Smith III" },{ "filters.lib/peak_eq_rm:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/peak_eq_rm:license": "MIT-style STK-4.3 license" },{ "filters.lib/pole:author": "Julius O. Smith III" },{ "filters.lib/pole:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/pole:license": "MIT-style STK-4.3 license" },{ "filters.lib/tf1:author": "Julius O. Smith III" },{ "filters.lib/tf1:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/tf1:license": "MIT-style STK-4.3 license" },{ "filters.lib/tf1s:author": "Julius O. Smith III" },{ "filters.lib/tf1s:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/tf1s:license": "MIT-style STK-4.3 license" },{ "filters.lib/tf2:author": "Julius O. Smith III" },{ "filters.lib/tf2:copyright": "Copyright (C) 2003-2019 by Julius O. Smith III <jos@ccrma.stanford.edu>" },{ "filters.lib/tf2:license": "MIT-style STK-4.3 license" },{ "float.lib/name": "Faust float Library" },{ "float.lib/version": "0.1" },{ "maths.lib/author": "GRAME" },{ "maths.lib/copyright": "GRAME" },{ "maths.lib/license": "LGPL with exception" },{ "maths.lib/name": "Faust Math Library" },{ "maths.lib/version": "2.1" },{ "name": "cage" },{ "noises.lib/name": "Faust Noise Generator Library" },{ "noises.lib/version": "0.0" },{ "oscillators.lib/name": "Faust Oscillator Library" },{ "oscillators.lib/version": "0.0" },{ "reverbs.lib/name": "Faust Reverb Library" },{ "reverbs.lib/version": "0.0" },{ "routes.lib/name": "Faust Signal Routing Library" },{ "routes.lib/version": "0.1" },{ "runtime.lib/name": "Runtime Library" },{ "runtime.lib/version": "0.1" },{ "signals.lib/name": "Faust Signal Routing Library" },{ "signals.lib/version": "0.0" },{ "soundfiles.lib/name": "Faust Soundfile Library" },{ "soundfiles.lib/version": "0.6" }],"ui": [ {"type": "vgroup","label": "cage","items": [ {"type": "hgroup","label": "Birds","items": [ {"type": "hslider","label": "Speed (Granulator)","address": "/cage/Birds/Speed_(Granulator)","index": 9045076,"meta": [{ "1": "" },{ "acc": "0 1 -10 0 10" },{ "style": "knob" }],"init": 120,"min": 120,"max": 480,"step": 0.1},{"type": "hslider","label": "Probability (Granulator)","address": "/cage/Birds/Probability_(Granulator)","index": 9045096,"meta": [{ "2": "" },{ "acc": "1 0 -10 0 10" },{ "style": "knob" },{ "unit": "%" }],"init": 30,"min": 25,"max": 100,"step": 1},{"type": "hslider","label": "Proximity (InstrReverb)","address": "/cage/Birds/Proximity_(InstrReverb)","index": 8913856,"meta": [{ "3": "" },{ "acc": "1 0 -15 0 10" },{ "style": "knob" }],"init": 0.5,"min": 0,"max": 1,"step": 0.01}]},{"type": "hgroup","label": "QUQU","items": [ {"type": "hslider","label": "Envelope Attack","address": "/cage/QUQU/Envelope_Attack","index": 8913824,"meta": [{ "style": "knob" },{ "unit": "s" }],"init": 0.03,"min": 0.01,"max": 2,"step": 0.01},{"type": "hslider","label": "Envelope Release","address": "/cage/QUQU/Envelope_Release","index": 8913844,"meta": [{ "style": "knob" },{ "unit": "s" }],"init": 0.04,"min": 0.01,"max": 5,"step": 0.01},{"type": "hslider","label": "Frequency","address": "/cage/QUQU/Frequency","index": 8913684,"meta": [{ "unit": "Hz" }],"init": 4000,"min": 70,"max": 5000,"step": 0.01},{"type": "hslider","label": "Modulation Frequency","address": "/cage/QUQU/Modulation_Frequency","index": 8913720,"meta": [{ "scale": "log" }],"init": 97,"min": 0.001,"max": 100,"step": 0.001},{"type": "hslider","label": "Modulation intensity","address": "/cage/QUQU/Modulation_intensity","index": 8913704,"meta": [{ "style": "knob" },{ "unit": "%" }],"init": 70,"min": 0,"max": 100,"step": 0.01},{"type": "hslider","label": "Probability","address": "/cage/QUQU/Probability","index": 8913780,"meta": [{ "acc": "0 1 -10 0 10" },{ "style": "knob" },{ "unit": "%" }],"init": 90,"min": 25,"max": 100,"step": 1},{"type": "hslider","label": "Speed","address": "/cage/QUQU/Speed","index": 8913760,"meta": [{ "acc": "0 1 -10 0 10" },{ "style": "knob" }],"init": 250,"min": 120,"max": 480,"step": 0.1},{"type": "hslider","label": "Volume","address": "/cage/QUQU/Volume","index": 8913672,"init": 0.02,"min": 0,"max": 1,"step": 0.01}]},{"type": "soundfile","label": "0x7ff80d1ada70","url": "{\'RADIO1.wav\';\'RADIO2.wav\';\'RADIO3.wav\'}","address": "/cage/0x7ff80d1ada70","index": 4718740},{"type": "soundfile","label": "0x7ff80d1ee200","url": "{\'dialog1.wav\';\'dialog2.wav\';\'dialog3.wav\';\'lenny.wav\';\'rg3.wav\';\'macron3.wav\';\'macron4.wav\';\'jiaomaidiao1.wav\';\'jiaomaidiao2.wav\';\'jiaomaidiao3.wav\';\'nainai1.wav\';\'nainai2.wav\';\'xinwen1.wav\';\'xinwen2.wav\';\'journal1.wav\';\'journal2.wav\';\'journal3.wav\';\'macron1.wav\';\'macron2.wav\';\'rg1.wav\';\'rg2.wav\'}","address": "/cage/0x7ff80d1ee200","index": 8913260},{"type": "checkbox","label": "switch","address": "/cage/switch","index": 524316}]}]}';
}
function getBase64Codecage() { return ""; }

/*
 faust2webaudio

 Primarily written by Myles Borins
 During the Spring 2013 offering of Music 420b with Julius Smith
 A bit during the Summer of 2013 with the help of Joshua Kit Clayton
 And finally a sprint during the late fall of 2013 to get everything working
 A Special thanks to Yann Orlarey and St√©phane Letz

 faust2webaudio is distributed under the terms the MIT or GPL2 Licenses.
 Choose the license that best suits your project. The text of the MIT and GPL
 licenses are at the root directory.

 Additional code: GRAME 2014-2019
*/

'use strict';

const faust_module = FaustModule(); // Emscripten generated module

/**
 * @class FaustWasm2ScriptProcessor
 * @property {string} name - name of current DSP
 * @property {any[]} _log - event log
 * @property {string[]} node - ScriptProcessorNode
 * @property {boolean} debug - debug mode
 */
class FaustWasm2ScriptProcessor {

    /**
     * Creates an instance of FaustWasm2ScriptProcessor.
     * @param {string} dspName - dsp name
     * @param {{ debug: boolean, [key: string]: any }} options - compile options
     */
    constructor(dspName, options) {
        this.name = dspName;
        this._log = [];
        this.debug = false || (typeof options === "object" && options.debug);
    }
    
    async asyncForEach(array, callback) {
        for (let index = 0; index < array.length; index++) {
            await callback(array[index], index, array);
        }
    }
    
    async loadAudioFiles(json) {

        // Get filenames in JSON
        let json_object = JSON.parse(json);
        let soundfiles = [];
        let parse_ui = ui => ui.forEach(group => parse_group(group));
        let parse_group = group => group.items ? parse_items(group.items) : null;
        let parse_items = items => items.forEach(item => parse_item(item));
        let parse_item = item => {
            if (item.type === "vgroup"
                || item.type === "hgroup"
                || item.type === "tgroup") {
                parse_items(item.items);
            } else if (item.type === "soundfile") {
                item.url.slice(1, -1).split(';').forEach(item => soundfiles.push(item));
            }
        }
        parse_ui(json_object.ui);

        // Load each file and save it in EMCC local FS 
        await this.asyncForEach(soundfiles, async name_aux => {
            let name = name_aux.slice(1, -1);
            console.log(name);
            //const soundfile = await fetch(name, { mode: 'no-cors' });
            const soundfile = await fetch(name);
            const data = await soundfile.arrayBuffer();
            let stream = faust_module.FS.open(name, 'w+');
            let buf = new Uint8Array(data);
            let res1 = faust_module.FS.write(stream, buf, 0, buf.length, 0);
            faust_module.FS.close(stream);
        });
    }

    /**
    * Constructor of Monophonic Faust DSP
    *
    * @param {WebAssembly.Instance} instance - the wasm instance
    * @param {AudioContext | webkitAudioContext} audioCtx - the Web Audio context
    * @param {number} bufferSize - the buffer_size in frames
    *
    * @returns {ScriptProcessorNode} a valid WebAudio ScriptProcessorNode object or null
    */
    getNode(instance, audioCtx, bufferSize, json) {
    
        this.json = json;
        this.json_object = JSON.parse(this.json);
        
        console.log("getNumInputs " + instance.getNumInputs());
        console.log("getNumOutputs " + instance.getNumOutputs());
      
        let sp;
        const inputs = parseInt(this.json_object.inputs);
        const outputs = parseInt(this.json_object.outputs);
        try {
            sp = audioCtx.createScriptProcessor(bufferSize, inputs, outputs);
        } catch (e) {
            this.error("Error in createScriptProcessor: " + e);
            return null;
        }
     
        sp.output_handler = null;
        sp.ins = null;
        sp.outs = null;
        sp.compute_handler = null;

        sp.dspInChannnels = [];
        sp.dspOutChannnels = [];

        sp.fPitchwheelLabel = [];
        sp.fCtrlLabel = new Array(128).fill(null).map(() => []);
        
        sp.remap = (v, mn0, mx0, mn1, mx1) => (v - mn0) / (mx0 - mn0) * (mx1 - mn1) + mn1;
     
        sp.numIn = inputs;
        sp.numOut = outputs;

        this.log(sp.numIn);
        this.log(sp.numOut);

        // Memory allocator
        sp.ptr_size = 4;
        sp.sample_size = 4;

        sp.instance = instance;

        // bargraph
        sp.outputs_timer = 5;
        sp.outputs_items = [];

        // input items
        sp.inputs_items = [];
 
        sp.update_outputs = () => {
            if (sp.outputs_items.length > 0 && sp.output_handler && sp.outputs_timer-- === 0) {
                sp.outputs_timer = 5;
                sp.outputs_items.forEach(item => sp.output_handler(item, sp.instance.getParamValue(item)));
            }
        };

        sp.compute = e => {
            // Read inputs
            for (let i = 0; i < sp.numIn; i++) { 
                const input = e.inputBuffer.getChannelData(i);
                const dspInput = sp.dspInChannnels[i];
                dspInput.set(input);
            }
            // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)
            if (sp.compute_handler) sp.compute_handler(bufferSize);
            // Compute
            try {
            	sp.instance.compute(bufferSize, sp.ins, sp.outs); 
            } catch(e) {
            	console.log("ERROR in compute (" + e + ")");
            }
            // Update bargraph
            sp.update_outputs();
            // Write outputs
            for (let i = 0; i < sp.numOut; i++) { 
                const output = e.outputBuffer.getChannelData(i);
                const dspOutput = sp.dspOutChannnels[i];
                output.set(dspOutput);
            }
        };
        
        // JSON parsing
        sp.parse_ui = ui => ui.forEach(group => sp.parse_group(group));
        sp.parse_group = group => group.items ? sp.parse_items(group.items) : null;
        sp.parse_items = items => items.forEach(item => sp.parse_item(item));
        sp.parse_item = item => {
            if (item.type === "vgroup" || item.type === "hgroup" || item.type === "tgroup") {
                sp.parse_items(item.items);
            } else if (item.type === "hbargraph" || item.type === "vbargraph") {
                // Keep bargraph adresses
                sp.outputs_items.push(item.address);
            } else if (item.type === "vslider" || item.type === "hslider" || item.type === "button"
                    || item.type === "checkbox" || item.type === "nentry") {
                // Keep inputs adresses
                sp.inputs_items.push(item.address);
                if (!item.meta) return;
                item.meta.forEach(meta => {
                    const midi = meta.midi;
                    if (!midi) return;
                    const strMidi = midi.trim();
                    if (strMidi === "pitchwheel") {
                        sp.fPitchwheelLabel.push({
                            path: item.address,
                            min: parseFloat(item.min),
                            max: parseFloat(item.max)
                        });
                    } else {
                        const matched = strMidi.match(/^ctrl\s(\d+)/);
                        if (!matched) return;
                        sp.fCtrlLabel[parseInt(matched[1])].push({
                            path: item.address,
                            min: parseFloat(item.min),
                            max: parseFloat(item.max)
                        });
                    }
                })
            }
        }
        
        // Setup web audio context
        sp.initAux = () => {
            this.log("buffer_size " + bufferSize);
            sp.onaudioprocess = sp.compute;
            
            if (sp.numIn > 0) {
                sp.ins = faust_module._malloc(sp.numIn * sp.ptr_size);
                for (let i = 0; i < sp.numIn; i++) {
                    faust_module.HEAP32[(sp.ins >> 2) + i] = faust_module._malloc(bufferSize * sp.sample_size);
                }
                // Prepare Ins buffer tables
                const dspInChans = faust_module.HEAP32.subarray(sp.ins >> 2, (sp.ins + sp.numIn * sp.ptr_size) >> 2);
                for (let i = 0; i < sp.numIn; i++) {
                    sp.dspInChannnels[i] = faust_module.HEAPF32.subarray(dspInChans[i] >> 2, (dspInChans[i] + bufferSize * sp.sample_size) >> 2);
                }
            } else {
                // Null pointer for C++ side
                sp.ins = 0;
            }

            if (sp.numOut > 0) {
                sp.outs = faust_module._malloc(sp.numOut * sp.ptr_size);
                for (let i = 0; i < sp.numOut; i++) {
                    faust_module.HEAP32[(sp.outs >> 2) + i] = faust_module._malloc(bufferSize * sp.sample_size);
                }
                // Prepare Out buffer tables
                const dspOutChans = faust_module.HEAP32.subarray(sp.outs >> 2, (sp.outs + sp.numOut * sp.ptr_size) >> 2);
                for (let i = 0; i < sp.numOut; i++) {
                    sp.dspOutChannnels[i] = faust_module.HEAPF32.subarray(dspOutChans[i] >> 2, (dspOutChans[i] + bufferSize * sp.sample_size) >> 2);
                }
            } else {
                // Null pointer for C++ side
                sp.outs = 0;
            }
            
    	    // Parse JSON UI part
            sp.parse_ui(this.json_object.ui);
            // Init DSP
            sp.instance.init(audioCtx.sampleRate);
        }
        
        sp.getSampleRate = () => audioCtx.sampleRate;   // Return current sample rate
        sp.getNumInputs = () => sp.numIn;               // Return instance number of audio inputs.
        sp.getNumOutputs = () => sp.numOut;             // Return instance number of audio outputs.
        
        /**
        * Global init, doing the following initialization:
        * - static tables initialization
        * - call 'instanceInit': constants and instance state initialisation
        *
        * @param {number} sampleRate - the sampling rate in Hertz
        */
        sp.init = sampleRate => sp.instance.init(sampleRate);
        
        /**
        * Init instance state.
        *
        * @param {number} sampleRate - the sampling rate in Hertz
        */
        sp.instanceInit = sampleRate => sp.instance.instanceInit(sampleRate);
        
        /**
        * Init instance constant state.
        *
        * @param {number} sampleRate - the sampling rate in Hertz
        */
        sp.instanceConstants = sampleRate => sp.instance.instanceConstants(sampleRate);
        
        /* Init default control parameters values. */
        sp.instanceResetUserInterface = () => sp.instance.instanceResetUserInterface();
        
        /* Init instance state (delay lines...).*/
        sp.instanceClear = () => sp.instance.instanceClear();
        
        /**
         * Trigger the Meta handler with instance specific calls to 'declare' (key, value) metadata.
         *
         * @param {{ declare: (string, any) => any }} handler - the Meta handler as a 'declare' function of type (key, value)
         */
        sp.metadata = handler => {
            if (this.json_object.meta) {
                this.json_object.meta.forEach(meta => handler.declare(Object.keys(meta)[0], Object.values(meta)[0]));
            }
        }
        
        /**
         * Setup a control output handler with a function of type (path, value)
         * to be used on each generated output value. This handler will be called
         * each audio cycle at the end of the 'compute' method.
         *
         * @param {{ declare: (string, any) => any }} handler - a function of type function(path, value)
         */
        sp.setOutputParamHandler = handler => sp.output_handler = handler;
        
        /**
         * Get the current output handler.
         */
        sp.getOutputParamHandler = () => sp.output_handler;
        
        /**
         * Control change
         *
         * @param {number} channel - the MIDI channel (0..15, not used for now)
         * @param {number} ctrl - the MIDI controller number (0..127)
         * @param {number} value - the MIDI controller value (0..127)
         */
        sp.ctrlChange = (channel, ctrl, value) => {
            if (!sp.fCtrlLabel[ctrl].length) return;
            sp.fCtrlLabel[ctrl].forEach(ctrl => {
                const path = ctrl.path;
                sp.setParamValue(path, sp.remap(value, 0, 127, ctrl.min, ctrl.max));
                if (sp.output_handler) sp.output_handler(path, sp.getParamValue(path));
            })
        }
        
        /**
         * PitchWeel
         *
         * @param {number} channel - the MIDI channel (0..15, not used for now)
         * @param {number} value - the MIDI controller value (-1..1)
         */
        sp.pitchWheel = (channel, wheel) => {
            sp.fPitchwheelLabel.forEach(pw => {
                sp.setParamValue(pw.path, sp.remap(wheel, 0, 16383, pw.min, pw.max));
                if (sp.output_handler) sp.output_handler(pw.path, sp.getParamValue(pw.path));
            })
        }
        
        /**
         * Set control value.
         *
         * @param {string} path - the path to the wanted control (retrieved using 'getParams' method)
         * @param {number} val - the float value for the wanted parameter
         */
        sp.setParamValue = (path, val) => sp.instance.setParamValue(path, parseFloat(val));
        /**
         * Get control value.
         *
         * @param {string} path - the path to the wanted control (retrieved using 'controls' method)
         *
         * @return {number} the float value
         */
        sp.getParamValue = path => sp.instance.getParamValue(path);
        
        /**
         * Get the table of all input parameters paths.
         *
         * @return {object} the table of all input parameter paths.
         */
        sp.getParams = () => sp.inputs_items;
        
        /**
         * Get DSP JSON description with its UI and metadata
         *
         * @return {string} DSP JSON description
         */
        sp.getJSON = () => this.json;
        
        // Init resulting DSP
        sp.initAux();
        return sp;
    }
    /**
    * Create a ScriptProcessorNode Web Audio object
    * by loading and compiling the Faust wasm file
    *
    * @param {AudioContext | webkitAudioContext} audioCtx - the Web Audio context
    * @param {number} bufferSize - the bufferSize in frames
    * @returns {Promise<ScriptProcessorNode>} a Promise for valid WebAudio ScriptProcessorNode object or null
    */
    async createDSP(audioCtx, bufferSize) {
       
        try {
        	   
            faust_module.faust = faust_module.faust || {};
            faust_module.faust.wasm_instance = faust_module.faust.wasm_instance || [];

            const wasm_file = await fetch(this.name + ".wasm");
            const wasm_buffer = await wasm_file.arrayBuffer();
            const json = faust_module.wasm_dsp_factory.extractJSON(wasm_buffer);

            await this.loadAudioFiles(json);
              
            const importObject = {
                env: {
                    memoryBase: 0,
                    tableBase: 0,
                    _abs: Math.abs,
                    
                    // Float version
                    _acosf: Math.acos,
                    _asinf: Math.asin,
                    _atanf: Math.atan,
                    _atan2f: Math.atan2,
                    _ceilf: Math.ceil,
                    _cosf: Math.cos,
                    _expf: Math.exp,
                    _floorf: Math.floor,
                    _fmodf: (x, y) => x % y,
                    _logf: Math.log,
                    _log10f: Math.log10,
                    _max_f: Math.max,
                    _min_f: Math.min,
                    _remainderf: (x, y) => x - Math.round(x / y) * y,
                    _powf: Math.pow,
                    _roundf: Math.fround,
                    _sinf: Math.sin,
                    _sqrtf: Math.sqrt,
                    _tanf: Math.tan,
                    _acoshf: Math.acosh,
                    _asinhf: Math.asinh,
                    _atanhf: Math.atanh,
                    _coshf: Math.cosh,
                    _sinhf: Math.sinh,
                    _tanhf: Math.tanh,
                    
                    // Double version
                    _acos: Math.acos,
                    _asin: Math.asin,
                    _atan: Math.atan,
                    _atan2: Math.atan2,
                    _ceil: Math.ceil,
                    _cos: Math.cos,
                    _exp: Math.exp,
                    _floor: Math.floor,
                    _fmod: (x, y) => x % y,
                    _log: Math.log,
                    _log10: Math.log10,
                    _max_: Math.max,
                    _min_: Math.min,
                    _remainder: (x, y) => x - Math.round(x / y) * y,
                    _pow: Math.pow,
                    _round: Math.fround,
                    _sin: Math.sin,
                    _sqrt: Math.sqrt,
                    _tan: Math.tan,
                    _acosh: Math.acosh,
                    _asinh: Math.asinh,
                    _atanh: Math.atanh,
                    _cosh: Math.cosh,
                    _sinh: Math.sinh,
                    _tanh: Math.tanh,
                    _printInt32: (x) => { console.log(x); },
                    
                    memory : faust_module.faust.memory,
                    
                    table: new WebAssembly.Table({ initial: 0, element: "anyfunc" })
                }
            };
             
            const wasm_instance = await WebAssembly.instantiate(wasm_buffer, importObject);
            faust_module.faust.wasm_instance.push(wasm_instance.instance);

            const factory = faust_module.wasm_dsp_factory.createWasmDSPFactory(0, json);
            return this.getNode(factory.createDSPInstance(), audioCtx, bufferSize, json);
        } catch (e) {
            this.error(e);
            this.error("Faust " + this.name + " cannot be loaded or compiled");
        }
    }
    
    log(str) {
        this._log.push(str);
        if (this.debug) console.log(str);
    }
    
    error(str) {
        this._log.push(str);
        console.error(str);
    }
}

const dspName = "cage";
const instance = new FaustWasm2ScriptProcessor(dspName);

// output to window or npm package module
if (typeof module === "undefined") {
    window[dspName] = instance;
} else {
    const exp = {};
    exp[dspName] = instance;
    module.exports = exp;
}

// Usage : cage.createDSP(audioCtx, 1024).then(dsp => dsp.connect(audioCtx.destination));

    'use strict';
    // Faust part
    if (!window.dspName) window.dspName = "mydsp";
    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();
    let audioInput, dspNode, $faustUI;
    let dspOutputHandler = () => {};

    // MIDI input handling
    const midiMessageReceived = e => {
        if (!dspNode) return;
        const cmd = e.data[0] >> 4;
        const channel = e.data[0] & 0xf;
        const data1 = e.data[1];
        const data2 = e.data[2];
        if (channel === 9) return;
        else if (cmd === 11) dspNode.ctrlChange(channel, data1, data2);
        else if (cmd === 14) dspNode.pitchWheel(channel, (data2 * 128.0 + data1));
    }
    const activateMIDIInput = () => {
        console.log("activateMIDIInput");
        const onError = error => console.error(error);
        const onSuccess = access => {
            access.onstatechange = e => {
                if (e.port.type === "input") {
                    if (e.port.state === "connected") {
                        console.log(e.port.name + " is connected");
                        e.port.onmidimessage = midiMessageReceived;
                    } else if (e.port.state  === "disconnected") {
                        console.log(e.port.name + " is disconnected");
                        e.port.onmidimessage = null;
                    }
                }
            }
            for (const input of access.inputs.values()) {
                input.onmidimessage = midiMessageReceived;
                console.log(input.name + " is connected");
            }
        }

        if (navigator.requestMIDIAccess) {
            navigator.requestMIDIAccess().then(onSuccess, onError);
        } else {
            alert("MIDI input cannot be activated, either your browser still does't have it, or you need to explicitly activate it.");
        }
    }

    // Audio input handling
    const activateAudioInput = () => {
        if (!navigator.getUserMedia) {
            navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        }
        if (!navigator.getUserMedia) alert("Audio input API not available") 
        const onSuccess = device => {
            audioInput = audioCtx.createMediaStreamSource(device); // Create an AudioNode from the stream.
            audioInput.connect(dspNode); // Connect it to the destination.
        }
        const onError = e => {
            alert('Error getting audio input');
            console.error(e);
            audioInput = null;
        }
        navigator.getUserMedia({ audio: { echoCancellation: false } }, onSuccess, onError);
    }

    // Save/Load functions using local storage
    const getStorageItemValue = (item_key, key) => { // get item from local storage 'item_key' key
        if (!localStorage.getItem(item_key)) return null;
        const item_value = JSON.parse(localStorage.getItem(item_key));
        const item_index = item_value.findIndex(obj => obj[0] === key);
        return item_index >= 0 ? item_value[item_index][1] : null;
    }

    const setStorageItemValue = (item_key, key, value) => { // set [key, value] in local storage item_key key
        let item_value = [];
        if (localStorage.getItem(item_key)) item_value = JSON.parse(localStorage.getItem(item_key));
        const item_index = item_value.findIndex((obj => obj[0] === key)); // Possibly update an existing 'key'
        if (item_index >= 0) item_value[item_index][1] = value; // Otherwise push a new [key, value]
        else item_value.push([key, value]);
        localStorage.setItem(item_key, JSON.stringify(item_value));
    }

    const saveDSPState = () => {
        dspNode.getParams().forEach(param => {
            setStorageItemValue('DSP', param, dspNode.getParamValue(param));
        })
    }

    const loadDSPState = () => {
        dspNode.getParams().forEach(param => {
            const value = getStorageItemValue('DSP', param);
            if (typeof value === "number") {
                dspNode.setParamValue(param, parseFloat(value)); // Restore DSP state
                dspOutputHandler(param, parseFloat(value)); // Restore GUI state
            }
        })
    }

    const initDSP = bufferSizeIn => {
        if (typeof WebAssembly === "undefined") return alert("WebAssembly is not supported in this browser !");
        if (!window[dspName]) return console.error(dspName + " instance not found.");
        const bufferSize = parseInt(bufferSizeIn || 4096*4);
        window[dspName].createDSP(audioCtx, bufferSize)
        .then(dsp => {
            if (!dsp) return console.error("Error in DSP creation.");
            if (dspNode) { // destroy current
                dspNode.disconnect(audioCtx.destination);
                if (audioInput) audioInput.disconnect(dspNode);
            }
            dspNode = dsp;
            if (dspNode.getNumInputs() > 0) activateAudioInput();
            dspNode.connect(audioCtx.destination);
            console.log(dspNode.getJSON());
            // TODO: emcc
            // dspNode.metadata({ declare: function(key, value) { console.log("key = " + key + " value = " + value); }});
            // console.log(dspNode.getParams());
            // dspNode.setParamValue("/cage/switch",1);
            loadDSPState(); // Load DSP state from local storage
        });
    }
    // To activate audio on iOS
    window.addEventListener("touchstart", () => {
        if (audioCtx.state !== "suspended") return;
        const buffer = audioCtx.createBuffer(1, 1, 22050);
        const source = audioCtx.createBufferSource(); // create empty buffer
        source.buffer = buffer;
        source.connect(audioCtx.destination); // connect to output (your speakers)
        source.start(); // play the file
        audioCtx.resume().then(() => console.log("Audio resumed"));
    }, false);
    
    // On desktop
    window.addEventListener("mousedown", () => {
        if (audioCtx.state !== "suspended") return;
        audioCtx.resume().then(() => console.log("Audio resumed"))
    });
    
    if (typeof _f4u$t !== "undefined") _f4u$t.main_loop = () => {}; // No polling from the server needed, so use an empty loop
    
    // Start monophonic instrument
    if (typeof Module !== "undefined") {
        console.log("Compiled with EMCC");
        Module['onRuntimeInitialized'] = initDSP;
    } else {
        console.log("Compiled with WASM backend");
        //activateMIDIInput();
        faust_module['onRuntimeInitialized'] = initDSP;
    }

    // Save DSP state to local storage
    setInterval(() => dspNode ? saveDSPState() : null, 1000);